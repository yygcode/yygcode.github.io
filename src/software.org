#+TITLE: 我的软件清单
#+DATE: 2017-11-20
#+AUTHOR: yanyg
#+EMAIL: yygcode@gmail.com

感谢自由软件, 感谢[[https://stallman.org/][Richard Stallman]].
本文软件根据字母顺序排列.

本文自2017/11开始整理, 规划2个月内完成主体内容.

* TODO cygwin                                                 :unix_like_env:

* TODO emacs                                                         :editor:

* TODO fio                                           :test:performance:block:
FIO(Flexible I/O tester)是Linux下IO子系统和调度器的性能测试软件. 可以从[[https://git.kernel.org/pub/scm/linux/kernel/git/axboe/fio.git][
kernel scm]]或[[https://github.com/axboe/fio][Github]]下载.

* TODO git                                                  :version_control:
* TODO latex                                             :typesetting_system:
* TODO mingw                                                        :gcc_env:

* DONE msys2                                   :distro_building_platform_win:
[[http://www.msys2.org/][MSYS2]]是Windows系统下的软件分发和构建平台, 提供类UNIX环境. 阅读[[https://github.com/msys2/msys2/wiki][MSYS2 WIKI]]获取更多信息.

下载[[http://repo.msys2.org/distrib/x86_64/][64bit]]或[[http://repo.msys2.org/distrib/i686/][32bit]]版本, 安装后重复执行操作"启动, 运行\(pacman -Syuu\), 退出",
直到提示所有软件升级完毕:
#+BEGIN_SRC shell
  yanyg@yanyg01 MINGW64 ~
  $ pacman -Syuu
  :: Synchronizing package databases...
   mingw32 is up to date
   mingw64 is up to date
   msys is up to date
  :: Starting core system upgrade...
   there is nothing to do
  :: Starting full system upgrade...
   there is nothing to do
#+END_SRC

执行\(pacman -Ss <name-pattern, pacman -S <package-name> ...,
pacman -R <package-name>, pacman -Ql [name-pattern]\)搜索, 安装, 卸载, 清单列举
软件包. 参考[[https://github.com/msys2/msys2/wiki/Using-packages][Using Packages]].

例如, 编译[[https://github.com/politza/pdf-tools][pdf-tools]]时提示错误缺少\(glib2.0, poppler\)等. 安装方式如下:
#+BEGIN_SRC shell
  ~$ ./configure
  configure: loading site script /mingw64/etc/config.site
  checking for a BSD-compatible install... /usr/bin/install -c
  checking whether build environment is sane... yes
  checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
  checking for gawk... gawk
  ...
  checking for poppler... no
  configure: error: Package requirements (poppler) were not met:

  No package 'poppler' found
  ~$ pacman -Ss poppler
  mingw32/mingw-w64-i686-poppler 0.59.0-2
      PDF rendering library based on xpdf 3.0 (mingw-w64)
  mingw32/mingw-w64-i686-poppler-data 0.4.8-1
      Encoding data for the poppler PDF rendering library
  mingw32/mingw-w64-i686-poppler-qt4 0.36.0-1
      PDF rendering library based on xpdf 3.0 (mingw-w64)
  mingw64/mingw-w64-x86_64-poppler 0.59.0-2
      PDF rendering library based on xpdf 3.0 (mingw-w64)
  mingw64/mingw-w64-x86_64-poppler-data 0.4.8-1
      Encoding data for the poppler PDF rendering library
  mingw64/mingw-w64-x86_64-poppler-qt4 0.36.0-1
      PDF rendering library based on xpdf 3.0 (mingw-w64)
  ~$ pacman -S mingw-w64-x86_64-poppler
  resolving dependencies...
  looking for conflicting packages...
  warning: dependency cycle detected:
  warning: mingw-w64-x86_64-harfbuzz will be installed before its mingw-w64-x86_64-freetype dependency

  Packages (27) mingw-w64-x86_64-c-ares-1.13.0-3  mingw-w64-x86_64-cairo-1.15.6-2  mingw-w64-x86_64-curl-7.56.1-1  mingw-w64-x86_64-fontconfig-2.12.6-1  mingw-w64-x86_64-freetype-2.8.1-1
                mingw-w64-x86_64-graphite2-1.3.10-1  mingw-w64-x86_64-harfbuzz-1.7.1-1  mingw-w64-x86_64-icu-58.2-2  mingw-w64-x86_64-jansson-2.10-1  mingw-w64-x86_64-lcms2-2.8-1  mingw-w64-x86_64-libidn2-2.0.4-1
                mingw-w64-x86_64-libjpeg-turbo-1.5.2-1  mingw-w64-x86_64-libmetalink-0.1.3-3  mingw-w64-x86_64-libssh2-1.8.0-1  mingw-w64-x86_64-libtiff-4.0.8-1  mingw-w64-x86_64-libunistring-0.9.7-1
                mingw-w64-x86_64-lzo2-2.10-1  mingw-w64-x86_64-nghttp2-1.26.0-1  mingw-w64-x86_64-nspr-4.17-1  mingw-w64-x86_64-nss-3.33-1  mingw-w64-x86_64-openjpeg2-2.3.0-1  mingw-w64-x86_64-pixman-0.34.0-3
                mingw-w64-x86_64-poppler-data-0.4.8-1  mingw-w64-x86_64-spdylay-1.4.0-1  mingw-w64-x86_64-sqlite3-3.20.0-1  mingw-w64-x86_64-xz-5.2.3-1  mingw-w64-x86_64-poppler-0.59.0-2

  Total Download Size:    29.74 MiB
  Total Installed Size:  166.38 MiB

  :: Proceed with installation? [Y/n] y
  :: Retrieving packages...
#+END_SRC

* DONE sdcv                                                      :dictionary:
SDCV是[[http://stardict-4.sourceforge.net/][星际译王(Stardict)]]的命令行版本. 星际译王是一款跨平台的国际词典开源软件,
项目领导[[http://www.huzheng.org/][胡正]]先生, 开发人员Sergey<kubtek@gmail.com>, Evgeniy<dushistov@mail.ru>,
Tao Wang<dancefire@gmail.com>, 贡献人员Alex Murygin <murygin@aitoc.com>.
因个人习惯只使其命令行版本. 感谢胡正.

SDCV源码在[[https://github.com/Dushistov/sdcv/][Github]]上, 在cygwin64下默认编译选项遇到\(popen/pclose\)未定义错误, 这是
由于\(popen\)不是ISO C++标准导致的. 修改编译参数\(-U__STRICT_ANSI__\)解决.

SDCV需要单独下载词典, 点击[[http://stardict.rrr.rs/dict.org/index.html][这里]]获取字典压缩包, 根据示例命令解压.

#+BEGIN_SRC shell
  # Change to sdcv directory
  ~$ git show --oneline
  51db56f (HEAD -> master, origin/master, origin/HEAD) Merge pull request #38 from nijel/master

  ~$ mkdir build -p
  ~$ cd build
  ~$ cmake -D CMAKE_CXX_FLAGS="-U__STRICT_ANSI__" -D CMAKE_INSTALL_PREFIX:PATH=/usr ..
  ~$ make
  ~$ make lang
  ~$ make install
  ~$ sdcv -v
  Console version of Stardict, version 0.5.2
  ~$ mkdir -p /usr/share/stardict/dic
  ~$ tar -C /usr/share/stardict/dic -xvf ~/Downloads/stardict-langdao-ec-gb-2.4.2.tar.bz2
  stardict-langdao-ec-gb-2.4.2/
  stardict-langdao-ec-gb-2.4.2/langdao-ec-gb.dict.dz
  stardict-langdao-ec-gb-2.4.2/langdao-ec-gb.idx
  stardict-langdao-ec-gb-2.4.2/langdao-ec-gb.ifo
  ~$ sdcv 字典
  Found 1 items, similar to 字典.
  -->朗道汉英字典5.0
  -->字典

  dictionary; glossary; vocabulary; wordbook
  【电】 dictionary
  相关词组:
    活字典
    字典的
    字典集
  ~$ sdcv dictionary
  Found 1 items, similar to dictionary.
  -->朗道英汉字典5.0
  -->dictionary

  ,*['dikʃәnәri]
  n. 字典, 词典
  【计】 词典
#+END_SRC

我做了编译调整的版本在[[https://github.com/yygcode/sdcv][这里]]下载.

* DONE sharex                                   :screencast:screen_recording:
ShareX是自由/开源软件, 基于.NET开发, 只能运行在Windows系统上. 支持截屏/录屏, 并
进行各种各样的分享. 界面支持多语言. [[https://en.wikipedia.org/wiki/ShareX][WIKI]]和[[https://zhuanlan.zhihu.com/p/19627720][知乎]]有介绍.
- 代码: [[https://github.com/ShareX/ShareX][github]]
- 主页: https://getsharex.com/
- 下载: [[https://getsharex.com/downloads/][Downloads]]

在[[https://getsharex.com/][主页]]上可找到完整的介绍文档. 录屏配置主菜单位于:
- 英文界面: Task settings->Capture->Screen recorder->Screen recorder options
- 中文界面: 任务设置->截图->屏幕记录->屏幕录制选项

录屏使用[[https://www.ffmpeg.org/][ffmpeg]]实现, 菜单"录屏配置->FFmpeg路径"下点击...设置或下载FFmpeg. 默认
配置未包含音频, 在录屏配置菜单'音频源'中选择麦克风或适当的音频源.

默认热键=Shift+PrtSc=启动/停止录屏, 启动时拖曳鼠标修改录屏区域. 点击菜单
"截图文件夹..."查看历史截图和录屏文件. 热键和录屏文件夹均可在主界面下找到配置
菜单.

我的配置:
- FFmpeg路径: %MyDocuments%\ShareX\Tools\ffmpeg.exe
- 录屏路径: G:\screencast
- 截图路径: G:\screenshot

Q&A
- 设置录屏路径和截图路径无效
  关闭ShareX界面时, ShareX依然在后台运行. 在任务栏右键ShareX图标, 选择"退出",
  然后再次启动.
- 什么是GDI Grab
  录屏选项中, 视频源可以选择"GDI Grab". GDI Grab是Windows系统下基于GDI的录屏设备.
  参考[[https://www.ffmpeg.org/ffmpeg-devices.html#gdigrab][FFmpeg GDI Grab]].
* TODO svn                                                  :version_control:
* TODO tex                                               :typesetting_system:
* TODO vim                                                           :editor:
